import streamlit as st
from authentication import authenticate
import yfinance as yf
import pandas as pd
import matplotlib.pyplot as plt
import plotly.graph_objects as go
from plotly.subplots import make_subplots
from streamlit_option_menu import option_menu

# Buscar dados das a√ß√µes
def get_stock_data(symbol, start_date, end_date):
    data = yf.download(symbol, start=start_date, end=end_date)
    return data

# Analisar os dados das a√ß√µes
def analyze_stock(data):
    data['MA50'] = data['Close'].rolling(window=50).mean()
    data['Volatility'] = data['Close'].rolling(window=50).std() * (252 ** 0.5)
    return data

# Fun√ß√£o para criar gr√°ficos com Matplotlib
def plot_matplotlib_graph(data, title, ylabel, xlabel='Data'):
    fig, ax = plt.subplots(figsize=(12, 6))
    ax.plot(data.index, data['Close'], label='Pre√ßo de Fechamento', color='blue')
    ax.plot(data.index, data['MA50'], label='M√©dia M√≥vel de 50 dias', color='red')
    ax.set_title(title)
    ax.set_xlabel(xlabel)
    ax.set_ylabel(ylabel)
    ax.legend()
    st.pyplot(fig)

# Fun√ß√£o para criar gr√°ficos com Plotly
def plot_plotly_graph(data, title, ylabel, xlabel='Data'):
    fig = make_subplots(specs=[[{"secondary_y": True}]])
    fig.add_trace(go.Scatter(x=data.index, y=data['Close'], mode='lines', name='Pre√ßo de Fechamento', line=dict(color='blue')), secondary_y=False)
    fig.add_trace(go.Scatter(x=data.index, y=data['MA50'], mode='lines', name='M√©dia M√≥vel de 50 dias', line=dict(color='red')), secondary_y=False)
    fig.update_layout(title=title, xaxis_title=xlabel, yaxis_title=ylabel, hovermode='x')
    fig.update_xaxes(rangeslider_visible=True)
    st.plotly_chart(fig, use_container_width=True)

# Histograma do Pre√ßo de Fechamento
def plot_histogram(data):
    fig, ax = plt.subplots(figsize=(12,6))
    ax.hist(data['Close'], bins=50, color='blue', alpha=0.7)
    ax.set_title('Histograma do Pre√ßo de Fechamento')
    ax.set_xlabel('Pre√ßo (USD)')
    ax.set_ylabel('Frequ√™ncia')
    st.pyplot(fig)

# Box Plot do Pre√ßo de Fechamento
def plot_boxplot(data):
    fig, ax = plt.subplots(figsize=(12,6))
    ax.boxplot(data['Close'], vert=False)
    ax.set_title('Box Plot do Pre√ßo de Fechamento')
    ax.set_xlabel('Pre√ßo (USD)')
    st.pyplot(fig)

# Gr√°fico de Dispers√£o do Volume de Negocia√ß√µes
def plot_scatter_volume(data):
    fig, ax = plt.subplots(figsize=(12,6))
    ax.scatter(data.index, data['Volume'], alpha=0.5, color='blue')
    ax.set_title('Gr√°fico de Dispers√£o do Volume de Negocia√ß√µes')
    ax.set_xlabel('Data')
    ax.set_ylabel('Volume')
    st.pyplot(fig)

# Home
def homepage():
    st.title('Fast Invest üìà')
        
    st.markdown("""
    ## Bem-vindo ao Fast Invest!
    **A plataforma que torna mais f√°cil do que nunca investir no mercado financeiro!**

    ### O que oferecemos:
    - **An√°lises detalhadas de a√ß√µes**
    - **Recomenda√ß√µes personalizadas de investimento**
    - **Ferramentas interativas para acompanhar seu portf√≥lio**

    ### Funcionalidades principais:
    - Acompanhe a evolu√ß√£o das suas a√ß√µes favoritas
    - Descubra novas oportunidades de investimento
    - Utilize gr√°ficos avan√ßados para an√°lises t√©cnicas

    ### Por que escolher o Fast Invest?
    "O sucesso financeiro n√£o √© um destino, √© uma jornada. E n√≥s estamos aqui para gui√°-lo em cada passo." 
    ### Estat√≠sticas:
    - Mais de **10,000** usu√°rios satisfeitos
    - Mais de **1,000** an√°lises de a√ß√µes realizadas
    - Mais de **500** recomenda√ß√µes de investimento personalizadas
    
    ---
    """)
    
    col1, col2, col3 = st.columns(3)
    
    with col1:
        st.markdown("<h3 style='font-size: 18px; text-align: center;'>Seguran√ßa üîí</h3>", unsafe_allow_html=True)
        st.write("Seu investimento protegido com a melhor tecnologia de seguran√ßa.")
    
    with col2:
        st.markdown("<h3 style='font-size: 18px; text-align: center;'>Confiabilidade ü§ùüèª</h3>", unsafe_allow_html=True)
        st.write("Transpar√™ncia e integridade em todas as nossas recomenda√ß√µes.")
    
    with col3:
        st.markdown("<h3 style='font-size: 18px; text-align: center;'>Facilidade ‚úÖ</h3>", unsafe_allow_html=True)
        st.write("Interface intuitiva e f√°cil de usar para todos os tipos de investidores.")
    
    st.markdown("---")
    
    st.write("""
    **Comece a explorar nossos recursos hoje mesmo e descubra como podemos ajud√°-lo(a) a alcan√ßar seus objetivos de investimento!**
    """)

# P√°gina de login
def login_page():
    st.title('P√°gina de Login')

    username = st.text_input('Usu√°rio')
    password = st.text_input('Senha', type='password')

    if st.button('Login'):
        if authenticate(username, password):
            st.session_state.authenticated = True
            st.success('Login realizado com sucesso!')
        else:
            st.error('Usu√°rio ou senha incorretos.')

# Filtros gr√°ficos
def app_content():
    st.title('An√°lise de A√ß√µes e Recomenda√ß√µes de Investimento:')
    st.sidebar.header('Filtros')
    symbol_options = ['PETR4.SA']
    symbol = st.sidebar.selectbox('Selecione o s√≠mbolo da a√ß√£o', symbol_options)
    start_date = st.sidebar.date_input('Selecione a data de in√≠cio', pd.to_datetime('2020-01-01'))
    end_date = st.sidebar.date_input('Selecione a data de fim', pd.to_datetime('2024-01-01'))

    if st.sidebar.button('Analisar'):
        data = get_stock_data(symbol, start_date, end_date)
        analyzed_data = analyze_stock(data)
        st.write(analyzed_data)
        
        st.subheader('1. Evolu√ß√£o do Pre√ßo da A√ß√£o (Matplotlib):')
        plot_matplotlib_graph(analyzed_data, 'Evolu√ß√£o do Pre√ßo da A√ß√£o (Matplotlib)', 'Pre√ßo (USD)')
        
        st.subheader('2. Evolu√ß√£o do Pre√ßo da A√ß√£o (Plotly):')
        plot_plotly_graph(analyzed_data, 'Evolu√ß√£o do Pre√ßo da A√ß√£o (Plotly)', 'Pre√ßo (USD)')
        
        st.subheader('3. Histograma do Pre√ßo de Fechamento:')
        plot_histogram(analyzed_data)
        
        st.subheader('4. Box Plot do Pre√ßo de Fechamento:')
        plot_boxplot(analyzed_data)
        
        st.subheader('5. Gr√°fico de Dispers√£o do Volume de Negocia√ß√µes:')
        plot_scatter_volume(analyzed_data)

# Menu de navega√ß√£o
def navbar():
    st.session_state.authenticated = False

    with st.sidebar:
        selected = option_menu(
            menu_title="Menu",
            options=["Home", "Gr√°ficos"],
            icons=["house", "activity"],
            menu_icon="cast",
            default_index=0,
        )
        if selected == "Home":
            st.markdown("<br><br><br><br><br><br>", unsafe_allow_html=True)
            st.image('logo_fast.png', width=200) 

    if selected == "Home":
        homepage()
    elif selected == "Gr√°ficos":
        app_content()


def main():
    navbar()

if __name__ == '__main__':
    main()
